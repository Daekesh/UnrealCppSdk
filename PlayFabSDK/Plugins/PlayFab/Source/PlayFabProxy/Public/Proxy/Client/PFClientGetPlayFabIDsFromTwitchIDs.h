// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once
#include "OnlineBlueprintCallProxyBase.h"

#include "Core/PlayFabClientAPI.h"
#include "Core/PlayFabClientDataModels.h"
#include "Proxy/PlayFabClientBPDataModels.h"
#include "PFClientGetPlayFabIDsFromTwitchIDs.generated.h"

UCLASS()
class PLAYFABPROXY_API UPFClientGetPlayFabIDsFromTwitchIDs : public UOnlineBlueprintCallProxyBase
{
	GENERATED_UCLASS_BODY()
public:

	UPROPERTY(BlueprintAssignable)
	FBPClientGetPlayFabIDsFromTwitchIDsResultDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FBPClientGetPlayFabIDsFromTwitchIDsResultDelegate OnFailure;
	
	// Retrieves the unique PlayFab identifiers for the given set of Twitch identifiers. The Twitch identifiers are the IDs for the user accounts, available as "_id" from the Twitch API methods(ex: https://github.com/justintv/Twitch-API/blob/master/v3_resources/users.md#get-usersuser).
	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject"), Category = "PlayFab|Client|Account Management")
	static UPFClientGetPlayFabIDsFromTwitchIDs* GetPlayFabIDsFromTwitchIDs(UObject* WorldContextObject, class APlayerController* PlayerController, const TArray<FString>& InTwitchIds);

	// UOnlineBlueprintCallProxyBase interface
	virtual void Activate() override;
	// End of UOnlineBlueprintCallProxyBase interface

private:

	PlayFab::ClientModels::FGetPlayFabIDsFromTwitchIDsRequest Request;

	PlayFab::UPlayFabClientAPI::FGetPlayFabIDsFromTwitchIDsDelegate	SuccessDelegate;
	PlayFab::FPlayFabErrorDelegate							ErrorDelegate;

	void OnSuccessCallback(const PlayFab::ClientModels::FGetPlayFabIDsFromTwitchIDsResult& Result);
	void OnErrorCallback(const PlayFab::FPlayFabError& Error);
};
