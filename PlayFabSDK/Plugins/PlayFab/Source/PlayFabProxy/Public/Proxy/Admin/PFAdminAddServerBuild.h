// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once
#include "OnlineBlueprintCallProxyBase.h"

#include "Core/PlayFabAdminAPI.h"
#include "Core/PlayFabAdminDataModels.h"
#include "Proxy/PlayFabAdminBPDataModels.h"
#include "PFAdminAddServerBuild.generated.h"

UCLASS()
class PLAYFABPROXY_API UPFAdminAddServerBuild : public UOnlineBlueprintCallProxyBase
{
	GENERATED_UCLASS_BODY()
public:

	UPROPERTY(BlueprintAssignable)
	FBPAdminAddServerBuildResultDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FBPAdminAddServerBuildResultDelegate OnFailure;
	
	// Adds the game server executable specified (previously uploaded - see GetServerBuildUploadUrl) to the set of those a client is permitted to request in a call to StartGame
	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject"), Category = "PlayFab|Admin|Custom Server Management")
	static UPFAdminAddServerBuild* AddServerBuild(UObject* WorldContextObject, class APlayerController* PlayerController, const FString& InBuildId, const FString& InCommandLineTemplate, const FString& InExecutablePath, const FString& InComment, const int32& InMaxGamesPerHost, const int32& InMinFreeGameSlots);

	// UOnlineBlueprintCallProxyBase interface
	virtual void Activate() override;
	// End of UOnlineBlueprintCallProxyBase interface

private:

	PlayFab::AdminModels::FAddServerBuildRequest Request;

	PlayFab::UPlayFabAdminAPI::FAddServerBuildDelegate	SuccessDelegate;
	PlayFab::FPlayFabErrorDelegate							ErrorDelegate;

	void OnSuccessCallback(const PlayFab::AdminModels::FAddServerBuildResult& Result);
	void OnErrorCallback(const PlayFab::FPlayFabError& Error);
};
